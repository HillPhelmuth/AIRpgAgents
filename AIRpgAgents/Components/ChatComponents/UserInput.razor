@using AIRpgAgents.ChatModels
<RadzenRow Style="position:absolute; bottom:2px; height:max-content; width:95%">
    <RadzenColumn Size="12" SizeLG="12">
        <RadzenCard Style="padding-top:2px;padding-bottom:1px" Variant="Variant.Text">
            <RadzenTemplateForm Data="_requestForm" TItem="RequestForm" Submit="SubmitRequest">
                <RadzenRow>
                    <RadzenColumn Size="10">
                        @if (_requestForm.UserInputRequest.UserInputType is UserInputType.Chat or UserInputType.Both)
                        {
                            <RadzenFormField Text="@HelperText" Style="width: 100%">
                                <ChildContent>
	                                @switch (UserInputFieldType)
	                                {
		                                case UserInputFieldType.TextBox:
			                                <RadzenTextBox ReadOnly="_isDisabled" Name="Input" Style="width: 100%" @bind-Value="@_requestForm.UserInputRequest.ChatInput"></RadzenTextBox>
			                                break;
		                                case UserInputFieldType.TextArea:
			                                <RadzenTextArea ReadOnly="_isDisabled" Name="Input" Style="width: 100%; height:5rem" @bind-Value="@_requestForm.UserInputRequest.ChatInput"></RadzenTextArea>
			                                break;
	                                }

                                </ChildContent>
                                <Helper>
                                    <RadzenRequiredValidator Visible=IsRequired Component="Input" Text="@($"{HelperText} required")"></RadzenRequiredValidator>
                                </Helper>
                            </RadzenFormField>
                            @if (_requestForm.ShowImageInput){
								<RadzenFormField Text="Image Url" Style="width: 100%">
									<ChildContent>
										<RadzenTextBox  Name="Image" Style="width: 100%" @bind-Value="_requestForm.UserInputRequest.ImageUrlInput"></RadzenTextBox>
									</ChildContent>
								</RadzenFormField>
							}
                        }
                    </RadzenColumn>
                    <RadzenColumn Size="2" SizeLG="2" Style="display: flex; align-items:center">
                        @foreach (var fileUpload in _requestForm.UserInputRequest.FileUploads)
                        {
                            <RadzenImage Style="width:2rem;height:2rem" Path="@($"data:image/png;base64,{fileUpload.FileBase64}")"></RadzenImage>
                        }

                        <RadzenCard Variant=Variant.Text Style="display: flex; align-items: center; justify-items: center; justify-content:center; justify-items:center; padding:0">
                            <RadzenButton ButtonStyle=ButtonStyle.Info Size="ButtonSize.ExtraSmall" Icon="@(UserInputFieldType == UserInputFieldType.TextBox ? "expand" : "unfold_less")" Click="ToggleInputType"></RadzenButton>
                           <RadzenButton Disabled="_isDisabled" ButtonType="ButtonType.Submit" Size=ButtonSize.Small Icon="send" IsBusy="IsBusy" BusyText="..." Text="@ButtonLabel"></RadzenButton>

                            <RadzenButton Size="ButtonSize.Small" Icon="block" Click="Cancel"></RadzenButton>
                            <RadzenButton Size="ButtonSize.Small" Icon="attach_file" Click="AddImage" ButtonStyle="ButtonStyle.Secondary"></RadzenButton>
                            
                        </RadzenCard>
                    </RadzenColumn>
                </RadzenRow>
            </RadzenTemplateForm>
        </RadzenCard>

    </RadzenColumn>
</RadzenRow>